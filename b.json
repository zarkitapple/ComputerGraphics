{
    headers: {
      host: 'localhost:3000',
      connection: 'keep-alive',
      'content-length': '349',
      accept: '*/*',
      dnt: '1',
      authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbS9nb29nbGUuaWRlbnRpdHkuaWRlbnRpdHl0b29sa2l0LnYxLklkZW
  50aXR5VG9vbGtpdCIsImlhdCI6MTYxNDY4Mzk4NSwiZXhwIjoxNjE0Njg3NTg1LCJpc3MiOiJmaXJlYmFzZS1hZG1pbnNkay12NGlub0B0ZmctYXBwLTQ4YzBjLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwic3ViIjoiZmlyZWJhc2Ut
  YWRtaW5zZGstdjRpbm9AdGZnLWFwcC00OGMwYy5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsInVpZCI6InRGeWdjME45M3RWTXBrM0FTRWdGY3I2UWtoOTIifQ.i8QIbhji5do87PFAfgJM4feAb2QDeWcTAbLhCZJclaPH01o3LcN19m4
  05t_YXlUP7DBA4Dt2dqsVOEPg8NNYQjjnYzrRP9T3HHnyOiLVBZOtfgQaYMH_fz562iMO8vmaHh_-DdfbieUZ4vPZa1tnPUf_B7PSHF5HIH0Aape_iZSxDAAvawDhx-wTfW5ehfT1jO_NlpX4IDhx7TNNjczRx06mGKI3sjSlFoHUgLdPc
  2zAgVFBRUFuk7YSsnPJzvjdoQs_rhLlRTD07qHHCZZrE4HCMJZxN6tkzRhCPlVSLMPKssoQhcdzPlOLuDmuUr0C5hqBrHQoS0aC86dvnWGjqA',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36',
      'content-type': 'application/json',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-origin',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/graphql',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'es-ES,es;q=0.9,en;q=0.8'
    },
    req: <ref *1> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: [ServerResponse],
        timeout: 0,
        [Symbol(async_id_symbol)]: 131,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 4332,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 139,
          [Symbol(triggerId)]: 137
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost:3000',
        connection: 'keep-alive',
        'content-length': '349',
        accept: '*/*',
        dnt: '1',
        authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbS9nb29nbGUuaWRlbnRpdHkuaWRlbnRpdHl0b29sa2l0LnYxLklk
  ZW50aXR5VG9vbGtpdCIsImlhdCI6MTYxNDY4Mzk4NSwiZXhwIjoxNjE0Njg3NTg1LCJpc3MiOiJmaXJlYmFzZS1hZG1pbnNkay12NGlub0B0ZmctYXBwLTQ4YzBjLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwic3ViIjoiZmlyZWJhc2
  UtYWRtaW5zZGstdjRpbm9AdGZnLWFwcC00OGMwYy5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsInVpZCI6InRGeWdjME45M3RWTXBrM0FTRWdGY3I2UWtoOTIifQ.i8QIbhji5do87PFAfgJM4feAb2QDeWcTAbLhCZJclaPH01o3LcN19
  m405t_YXlUP7DBA4Dt2dqsVOEPg8NNYQjjnYzrRP9T3HHnyOiLVBZOtfgQaYMH_fz562iMO8vmaHh_-DdfbieUZ4vPZa1tnPUf_B7PSHF5HIH0Aape_iZSxDAAvawDhx-wTfW5ehfT1jO_NlpX4IDhx7TNNjczRx06mGKI3sjSlFoHUgLd
  Pc2zAgVFBRUFuk7YSsnPJzvjdoQs_rhLlRTD07qHHCZZrE4HCMJZxN6tkzRhCPlVSLMPKssoQhcdzPlOLuDmuUr0C5hqBrHQoS0aC86dvnWGjqA',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36',
        'content-type': 'application/json',
        origin: 'http://localhost:3000',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://localhost:3000/graphql',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'es-ES,es;q=0.9,en;q=0.8'
      },
      rawHeaders: [
        'Host',
        'localhost:3000',
        'Connection',
        'keep-alive',
        'Content-Length',
        '349',
        'accept',
        '*/*',
        'DNT',
        '1',
        'authorization',
        'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbS9nb29nbGUuaWRlbnRpdHkuaWRlbnRpdHl0b29sa2l0LnYxLklkZW50aXR5VG9vbGt
  pdCIsImlhdCI6MTYxNDY4Mzk4NSwiZXhwIjoxNjE0Njg3NTg1LCJpc3MiOiJmaXJlYmFzZS1hZG1pbnNkay12NGlub0B0ZmctYXBwLTQ4YzBjLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwic3ViIjoiZmlyZWJhc2UtYWRtaW5zZGstd
  jRpbm9AdGZnLWFwcC00OGMwYy5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsInVpZCI6InRGeWdjME45M3RWTXBrM0FTRWdGY3I2UWtoOTIifQ.i8QIbhji5do87PFAfgJM4feAb2QDeWcTAbLhCZJclaPH01o3LcN19m405t_YXlUP7DBA
  4Dt2dqsVOEPg8NNYQjjnYzrRP9T3HHnyOiLVBZOtfgQaYMH_fz562iMO8vmaHh_-DdfbieUZ4vPZa1tnPUf_B7PSHF5HIH0Aape_iZSxDAAvawDhx-wTfW5ehfT1jO_NlpX4IDhx7TNNjczRx06mGKI3sjSlFoHUgLdPc2zAgVFBRUFuk7
  YSsnPJzvjdoQs_rhLlRTD07qHHCZZrE4HCMJZxN6tkzRhCPlVSLMPKssoQhcdzPlOLuDmuUr0C5hqBrHQoS0aC86dvnWGjqA',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36',
        'content-type',
        'application/json',
        'Origin',
        'http://localhost:3000',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'cors',
        'Sec-Fetch-Dest',
        'empty',
        'Referer',
        'http://localhost:3000/graphql',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'es-ES,es;q=0.9,en;q=0.8'
      ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: [ServerResponse],
        timeout: 0,
        [Symbol(async_id_symbol)]: 131,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 4332,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 139,
          [Symbol(triggerId)]: 137
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/graphql',
      originalUrl: '/graphql',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/graphql',
        path: '/graphql',
        href: '/graphql',
        _raw: '/graphql'
      },
      params: {},
      query: {},
      res: ServerResponse {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Socket],
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular *1],
        locals: [Object: null prototype] {},
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype]
      },
      body: {
        operationName: 'b',
        variables: {},
        query: 'mutation a {\n' +
          '  createUser(createUserInput: {userName: "plsotit", email: "abcdef@as.com", password: "12345678", role: complete}) {\n' +
          '    id\n' +
          '    token\n' +
          '    userName\n' +
          '    email\n' +
          '    creationDate\n' +
          '    role\n' +
          '  }\n' +
          '}\n' +
          '\n' +
          'mutation b {\n' +
          '  updateUser(updateUserInput: {userName: "a"}) {\n' +
          '    id\n' +
          '  }\n' +
          '}\n'
      },
      _body: true,
      length: undefined,
      [Symbol(kCapture)]: false,
      [Symbol(RequestTimeout)]: undefined
    },
    _extensionStack: GraphQLExtensionStack { extensions: [] }
  }
  